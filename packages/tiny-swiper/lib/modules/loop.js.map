{"version":3,"file":"loop.js","sources":["../../src/modules/loop.ts"],"sourcesContent":["import { SwiperInstance } from '../core/index'\nimport { Options } from '../core/options'\nimport { Element } from '../core/element'\nimport { Limitation } from '../core/engine/limitation'\nimport { Measure } from '../core/measure/index'\nimport { EngineLayout } from '../core/engine/index'\n\nexport default function SwiperPluginLoop (\n    instance: SwiperInstance,\n    options: Options\n) {\n    function getExpand (element: Element): number {\n        return options.slidesPerView >= element.$list.length\n            ? options.slidesPerView - element.$list.length + 1\n            : 1\n    }\n\n    if (!options.loop) return\n\n    instance.on('init-limitation', (\n        limitation: Limitation,\n        element: Element,\n        measure: Measure\n    ): void => {\n        const {\n            $list\n        } = element\n        const {\n            boxSize\n        } = measure\n        const expand = getExpand(element)\n        const base = -expand * boxSize\n\n        limitation.base += base\n        limitation.max += base\n        limitation.min += base\n        limitation.maxIndex = $list.length - ((options.centeredSlides || options.loop) ? 1 : Math.ceil(options.slidesPerView))\n    })\n\n    instance.on('init-layout', (element: Element): void => {\n        const {\n            $list,\n            $wrapper\n        } = element\n        const expand = getExpand(element)\n        const leftExpandList = $list.slice(-expand)\n            .map($slide => $slide.cloneNode(true))\n        const rightExpandList = $list.slice(0, expand)\n            .map($slide => $slide.cloneNode(true))\n\n        leftExpandList.forEach(($shadowSlide, index) => {\n            $wrapper.appendChild(rightExpandList[index])\n            $wrapper.insertBefore(leftExpandList[index], $list[0])\n        })\n    })\n\n    instance.on('before-slide', (\n        targetIndex: number,\n        layout: EngineLayout,\n        limitation: Limitation,\n        measure: Measure,\n        transform: Function\n    ): void => {\n        const {\n            boxSize\n        } = measure\n        const computedIndex = targetIndex < limitation.minIndex\n            ? limitation.minIndex\n            : targetIndex > limitation.maxIndex\n                ? limitation.maxIndex\n                : targetIndex\n        const offset = -computedIndex * boxSize + limitation.base\n\n        transform(offset > limitation.max\n            ? limitation.max\n            : offset < limitation.min\n                ? limitation.min\n                : offset)\n        index = computedIndex // TODO\n    })\n\n    instance.on('after-slide', (): void => {\n\n    })\n}\n"],"names":["SwiperPluginLoop","instance","options","getExpand","element","slidesPerView","$list","length","loop","on","limitation","measure","boxSize","expand","base","max","min","maxIndex","centeredSlides","Math","ceil","$wrapper","leftExpandList","slice","map","$slide","cloneNode","rightExpandList","forEach","$shadowSlide","index","appendChild","insertBefore","targetIndex","layout","transform","computedIndex","minIndex","offset"],"mappings":"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"}