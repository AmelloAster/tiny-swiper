{"version":3,"file":"keyboardControl.js","sources":["../../src/lib.js","../../src/modules/keyboardControl.js"],"sourcesContent":["export function addClass (el, list = []) {\n    if (!Array.isArray(list)) list = [list]\n\n    list.forEach(clz => (!el.classList.contains(clz) && el.classList.add(clz)))\n}\n\nexport function removeClass (el, list = []) {\n    if (!Array.isArray(list)) list = [list]\n\n    list.forEach(clz => (el.classList.contains(clz) && el.classList.remove(clz)))\n}\n\nexport function attachListener (el, evtName, handler, opts) {\n    el.addEventListener(evtName, handler, opts)\n}\n\nexport function detachListener (el, evtName, handler) {\n    el.removeEventListener(evtName, handler)\n}\n\nexport function removeAttr (el, attr) {\n    el.removeAttribute(attr)\n}\n\nexport function detectTouch () {\n    return Boolean(\n        'ontouchstart' in window\n        || navigator.maxTouchPoints > 0\n        || navigator.msMaxTouchPoints > 0\n        || window.DocumentTouch && document instanceof DocumentTouch\n    )\n}\n\n/**\n * get Element transform\n * @param {HTMLElement} el\n * @param {Boolean} isHorizontal\n * @returns {Number}\n */\nexport function getTranslate (el, isHorizontal) {\n    const matrix = getComputedStyle(el).transform.replace(/[a-z]|\\(|\\)|\\s/g, '').split(',').map(parseFloat)\n    let arr\n\n    if (matrix.length === 16) {\n        arr = matrix.slice(12, 14)\n    } else if (matrix.length === 6) {\n        arr = matrix.slice(4, 6)\n    }\n    return arr[isHorizontal ? 0 : 1] || 0\n}\n","import {\n    attachListener,\n    detachListener\n} from '../lib.js'\n\nconst DIRECTION = {\n    up: 'ArrowUp',\n    right: 'ArrowRight',\n    down: 'ArrowDown',\n    left: 'ArrowLeft'\n}\n\nfunction isVisible (el) {\n    if (!el) return false\n\n    const style = getComputedStyle(el)\n    const visible = style.visibility !== 'hidden' && style.display !== 'none'\n\n    if (!visible) return false\n\n    return el.parentElement && el.parentElement.nodeType === 1\n        ? isVisible(el.parentElement)\n        : true\n}\n\nfunction isElementInView (el) {\n    const visibility = isVisible(el)\n    const boundary = el.getBoundingClientRect()\n    const isInView = (boundary.top >= 0 && boundary.bottom <= window.innerHeight)\n        && (boundary.left >= 0 && boundary.right <= window.innerWidth)\n\n    console.log(isInView, visibility)\n    return isInView && visibility\n}\n\n/**\n * TinySwiper plugin for keyboard control.\n *\n * @param {*} tinyswiper\n */\nexport default function SwiperPluginKeyboardControl (instance) {\n    const { config } = instance\n\n    if (!config.keyboard) return\n\n    instance.keyboard = {\n        enable () {\n            instance.config.keyboard.enabled = true\n        },\n        disable () {\n            instance.config.keyboard.enabled = false\n        },\n        onKeyDown (e) {\n            const key = e.key\n\n            console.log(this)\n\n\n            if (!isElementInView(instance.$el) || !instance.config.keyboard.enabled) return\n\n            if (instance.isHorizontal) {\n                if (key === DIRECTION.left) {\n                    instance.scroll(instance.index - 1)\n                } else if (key === DIRECTION.right) {\n                    instance.scroll(instance.index + 1)\n                }\n            } else {\n                if (key === DIRECTION.down) {\n                    instance.scroll(instance.index - 1)\n                } else if (key === DIRECTION.up) {\n                    instance.scroll(instance.index + 1)\n                }\n            }\n        },\n    }\n\n    instance.on('before-init', tinyswiper => {\n        config.keyboard = {\n            enabled: false,\n            onlyInViewport: true,\n            ...config.keyboard\n        }\n\n        attachListener(window, 'keydown', tinyswiper.keyboard.onKeyDown)\n    })\n\n    instance.on('after-destroy', tinyswiper => {\n        if (!tinyswiper.keyboard) return\n\n        detachListener(window, 'keydown', tinyswiper.keyboard.onKeyDown)\n\n        delete tinyswiper.keyboard\n    })\n}\n"],"names":["attachListener","el","evtName","handler","opts","addEventListener","detachListener","removeEventListener","DIRECTION","up","right","down","left","isVisible","style","getComputedStyle","visible","visibility","display","parentElement","nodeType","isElementInView","boundary","getBoundingClientRect","isInView","top","bottom","window","innerHeight","innerWidth","console","log","SwiperPluginKeyboardControl","instance","config","keyboard","enable","enabled","disable","onKeyDown","e","key","$el","isHorizontal","scroll","index","on","tinyswiper","onlyInViewport"],"mappings":"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"}